(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{213:function(s,t,n){"use strict";n.r(t);var a=n(2),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("div",{staticClass:"custom-block tip"},[n("p",[s._v("前言：scrapy-redis框架中，reids存储的xxx:requests已经爬取完毕，但程序仍然一直运行，如何自动停止程序，结束空跑。")])]),s._v(" "),n("h3",{attrs:{id:"梳理思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#梳理思路"}},[s._v("#")]),s._v(" 梳理思路")]),s._v(" "),n("p",[s._v("1、scrapy内部的信号系统会在爬虫耗尽内部队列中的request时，就会触发spider_idle信号。\n2、爬虫的信号管理器收到spider_idle信号后，将调用注册spider_idle信号的处理器进行处理。\n3、当该信号的所有处理器(handler)被调用后，如果spider仍然保持空闲状态， 引擎将会关闭该spider。\nscrapy-redis 中的解决方案 在信号管理器上注册一个对应在spider_idle信号下的spider_idle()方法，当spider_idle触发是，信号管理器就会调用这个爬虫中的spider_idle()， Scrapy_redis 源码如下：")]),s._v(" "),n("h3",{attrs:{id:"思路实施"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#思路实施"}},[s._v("#")]),s._v(" 思路实施")]),s._v(" "),n("p",[s._v("这里在 Scrapy 中的 exensions（扩展） 中实现，当然你也可以在pipelines（管道）中实现。\n扩展框架提供一个机制，使得你能将自定义功能绑定到Scrapy。 扩展只是正常的类，它们在Scrapy启动时被实例化、初始化。 关于扩展详细见： scrapy 扩展(Extensions)")]),s._v(" "),n("p",[s._v("在settings.py 文件的目录下，创建一个名为 extensions.py 的文件，\n在其中写入以下代码")]),s._v(" "),n("div",{staticClass:"language-Python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -*- coding: utf-8 -*-")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Define here the models for your scraped Extensions")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" logging\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" time\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" scrapy "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" signals\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" scrapy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exceptions "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" NotConfigured\nlogger "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" logging"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getLogger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__name__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisSpiderSmartIdleClosedExensions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" idle_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" crawler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("crawler "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" crawler\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle_number "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" idle_number\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle_list "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle_count "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n \n    @"),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("classmethod")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("from_crawler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" crawler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 首先检查是否应该启用和提高扩展")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 否则不配置")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" crawler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("settings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getbool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MYEXT_ENABLED'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("raise")]),s._v(" NotConfigured\n \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取配置中的时间片个数，默认为360个，30分钟")]),s._v("\n        idle_number "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" crawler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("settings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'IDLE_NUMBER'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("360")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 实例化扩展对象")]),s._v("\n        ext "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" cls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("idle_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" crawler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将扩展对象连接到信号， 将signals.spider_idle 与 spider_idle() 方法关联起来。")]),s._v("\n        crawler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("signals"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("spider_opened"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" signal"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("signals"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("spider_opened"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        crawler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("signals"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("spider_closed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" signal"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("signals"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("spider_closed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        crawler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("signals"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("spider_idle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" signal"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("signals"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("spider_idle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# return the extension object")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ext\n \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("spider_opened")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" spider"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        logger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"opened spider %s redis spider Idle, Continuous idle limit： %d"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" spider"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("spider_closed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" spider"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        logger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"closed spider %s, idle count %d , Continuous idle count %d"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                    spider"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle_count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("spider_idle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" spider"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle_count "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("                        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 空闲计数")]),s._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("append"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每次触发 spider_idle时，记录下触发时间戳")]),s._v("\n        idle_list_len "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取当前已经连续触发的次数")]),s._v("\n \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断 当前触发时间与上次触发时间 之间的间隔是否大于5秒，如果大于5秒，说明redis 中还有key ")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" idle_list_len "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("and")]),s._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle_list "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n \n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" idle_list_len "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 连续触发的次数达到配置次数后关闭爬虫")]),s._v("\n            logger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n continued idle number exceed {} Times'")]),s._v("\n                        "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n meet the idle shutdown conditions, will close the reptile operation'")]),s._v("\n                        "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n idle start time: {},  close spider time: {}'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("format")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                                                                              self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("idle_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行关闭爬虫操作")]),s._v("\n            self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("crawler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("engine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("close_spider"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("spider"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'closespider_pagecount'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br")])]),n("h3",{attrs:{id:"扩展配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#扩展配置"}},[s._v("#")]),s._v(" 扩展配置")]),s._v(" "),n("p",[s._v("在settings.py 中添加以下配置， 请将 lianjia_ershoufang 替换为你的项目目录名。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("MYEXT_ENABLED=True      # 开启扩展\nIDLE_NUMBER=360           # 配置空闲持续时间单位为 360个 ，一个时间单位为5s\n \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"在-extensions-配置，激活扩展"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在-extensions-配置，激活扩展"}},[s._v("#")]),s._v(" 在 EXTENSIONS 配置，激活扩展")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("'EXTENSIONS'= {\n    'lianjia_ershoufang.extensions.RedisSpiderSmartIdleClosedExensions': 500,\n},\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("完成空闲关闭扩展，爬虫会在持续空闲 360个时间单位后关闭爬虫")]),s._v(" "),n("p",[s._v("MYEXT_ENABLED: 是否启用扩展，启用扩展为 True， 不启用为 False\nIDLE_NUMBER: 关闭爬虫的持续空闲次数，持续空闲次数超过IDLE_NUMBER，爬虫会被关闭。默认为 360 ，也就是30分钟，一分钟12个时间单位")])])}),[],!1,null,null,null);t.default=e.exports}}]);